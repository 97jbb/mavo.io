{"version":3,"sources":["backend.github.js"],"names":["$","_","Mavo","Backend","register","Class","extends","id","constructor","permissions","on","key","mavo","element","getAttribute","parsedURL","parseURL","url","username","extend","repo","path","apiCall","pathname","slice","login","get","request","then","Promise","resolve","atob","response","content","put","serialized","repoCall","fileCall","repoInfo","name","canPush","forkInfo","full_name","timeout","test","reject","clearTimeout","until","catch","setTimeout","ref","branch","message","fileInfo","btoa","sha","xhr","status","head","user","base","pullRequest","prs","existing","previewURL","URL","location","searchParams","set","notice","close","classes","dismiss","closed","form","number","state","UI","Message","prInfo","html_url","title","body","elements","edits","value","passive","oAuthenticate","getUser","logout","undefined","default_branch","push","toLowerCase","oAuthParams","oAuthLogout","info","avatar","avatar_url","fire","backend","static","apiDomain","oAuth","host","ret","split","shift","join","unescape","encodeURIComponent","str","decodeURIComponent","escape","window","Bliss"],"mappings":"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","file":"../mavo.es5.js","sourcesContent":["(function($) {\n\nvar _ = Mavo.Backend.register($.Class({\n\textends: Mavo.Backend,\n\tid: \"Github\",\n\tconstructor: function() {\n\t\tthis.permissions.on([\"login\", \"read\"]);\n\n\t\tthis.key = this.mavo.element.getAttribute(\"mv-github-key\") || \"7e08e016048000bc594e\";\n\n\t\t// Extract info for username, repo, branch, filepath from URL\n\t\tvar parsedURL = _.parseURL(this.url);\n\n\t\tif (parsedURL.username) {\n\t\t\t$.extend(this, parsedURL);\n\t\t\tthis.repo = this.repo || \"mv-data\";\n\t\t\tthis.path = this.path || `${this.mavo.id}.json`;\n\t\t\tthis.apiCall = `repos/${this.username}/${this.repo}/contents/${this.path}`;\n\t\t}\n\t\telse {\n\t\t\tthis.apiCall = this.url.pathname.slice(1);\n\t\t}\n\n\t\tthis.login(true);\n\t},\n\n\tget: function() {\n\t\treturn this.request(this.apiCall)\n\t\t       .then(response => Promise.resolve(this.repo? _.atob(response.content) : response));\n\t},\n\n\t/**\n\t * Saves a file to the backend.\n\t * @param {String} serialized - Serialized data\n\t * @param {String} path - Optional file path\n\t * @return {Promise} A promise that resolves when the file is saved.\n\t */\n\tput: function(serialized, path = this.path) {\n\t\tif (!path) {\n\t\t\t// Raw API calls are read-only for now\n\t\t\treturn;\n\t\t}\n\n\t\tvar repoCall = `repos/${this.username}/${this.repo}`;\n\t\tvar fileCall = `${repoCall}/contents/${path}`;\n\n\t\t// Create repo if it doesnâ€™t exist\n\t\tvar repoInfo = this.repoInfo || this.request(\"user/repos\", {name: this.repo}, \"POST\").then(repoInfo => this.repoInfo = repoInfo);\n\n\t\treturn Promise.resolve(repoInfo)\n\t\t\t.then(repoInfo => {\n\t\t\t\tif (!this.canPush()) {\n\t\t\t\t\t// Does not have permission to commit, create a fork\n\t\t\t\t\treturn this.request(`${repoCall}/forks`, {name: this.repo}, \"POST\")\n\t\t\t\t\t\t.then(forkInfo => {\n\t\t\t\t\t\t\tfileCall = `repos/${forkInfo.full_name}/contents/${path}`;\n\t\t\t\t\t\t\treturn this.forkInfo = forkInfo;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(forkInfo => {\n\t\t\t\t\t\t\t// Ensure that fork is created (they take a while)\n\t\t\t\t\t\t\tvar timeout;\n\t\t\t\t\t\t\tvar test = (resolve, reject) => {\n\t\t\t\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\t\t\t\tthis.request(`repos/${forkInfo.full_name}/commits`, {until: \"1970-01-01T00:00:00Z\"}, \"HEAD\")\n\t\t\t\t\t\t\t\t\t.then(x => {\n\t\t\t\t\t\t\t\t\t\tresolve(forkInfo);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(x => {\n\t\t\t\t\t\t\t\t\t\t// Try again after 1 second\n\t\t\t\t\t\t\t\t\t\ttimeout = setTimeout(test, 1000);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\treturn new Promise(test);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn repoInfo;\n\t\t\t})\n\t\t\t.then(repoInfo => {\n\t\t\t\treturn this.request(fileCall, {\n\t\t\t\t\tref: this.branch\n\t\t\t\t}).then(fileInfo => this.request(fileCall, {\n\t\t\t\t\tmessage: `Updated ${fileInfo.name || \"file\"}`,\n\t\t\t\t\tcontent: _.btoa(serialized),\n\t\t\t\t\tbranch: this.branch,\n\t\t\t\t\tsha: fileInfo.sha\n\t\t\t\t}, \"PUT\"), xhr => {\n\t\t\t\t\tif (xhr.status == 404) {\n\t\t\t\t\t\t// File does not exist, create it\n\t\t\t\t\t\treturn this.request(fileCall, {\n\t\t\t\t\t\t\tmessage: \"Created file\",\n\t\t\t\t\t\t\tcontent: _.btoa(serialized),\n\t\t\t\t\t\t\tbranch: this.branch\n\t\t\t\t\t\t}, \"PUT\");\n\t\t\t\t\t}\n\n\t\t\t\t\treturn xhr;\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(fileInfo => {\n\t\t\t\tif (this.forkInfo) {\n\t\t\t\t\t// We saved in a fork, do we have a pull request?\n\t\t\t\t\tthis.request(`repos/${this.username}/${this.repo}/pulls`, {\n\t\t\t\t\t\thead: `${this.user.username}:${this.branch}`,\n\t\t\t\t\t\tbase: this.branch\n\t\t\t\t\t}).then(prs => {\n\t\t\t\t\t\tthis.pullRequest(prs[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t},\n\n\tpullRequest: function(existing) {\n\t\tvar previewURL = new URL(location);\n\t\tpreviewURL.searchParams.set(this.mavo.id + \"-storage\", `https://github.com/${this.forkInfo.full_name}/${this.path}`);\n\t\tvar message = `Your edits are saved to <a href=\"${previewURL}\" target=\"_blank\">your own profile</a>, because you are not allowed to edit this page.`;\n\n\t\tif (this.notice) {\n\t\t\tthis.notice.close();\n\t\t}\n\n\t\tif (existing) {\n\t\t\t// We already have a pull request, ask about closing it\n\t\t\tthis.notice = this.mavo.message(`${message}\n\t\t\t\tYou have selected to suggest your edits to the page admins. Your suggestions have not been reviewed yet.\n\t\t\t\t<form onsubmit=\"return false\">\n\t\t\t\t\t<button class=\"mv-danger\">Revoke edit suggestion</button>\n\t\t\t\t</form>`, {\n\t\t\t\t\tclasses: \"mv-inline\",\n\t\t\t\t\tdismiss: [\"button\", \"submit\"]\n\t\t\t\t});\n\n\t\t\tthis.notice.closed.then(form => {\n\t\t\t\tif (!form) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Close PR\n\t\t\t\tthis.request(`repos/${this.username}/${this.repo}/pulls/${existing.number}`, {\n\t\t\t\t\tstate: \"closed\"\n\t\t\t\t}, \"POST\").then(prInfo => {\n\t\t\t\t\tnew Mavo.UI.Message(this.mavo, `<a href=\"${prInfo.html_url}\">Edit suggestion cancelled successfully!</a>`, {\n\t\t\t\t\t\tdismiss: [\"button\", \"timeout\"]\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.pullRequest();\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\t// Ask about creating a PR\n\t\t\tthis.notice = this.mavo.message(`${message}\n\t\t\t\tWrite a short description of your edits below to suggest them to the page admins:\n\t\t\t\t<form onsubmit=\"return false\">\n\t\t\t\t\t<textarea name=\"edits\" class=\"mv-autosize\" placeholder=\"I added / corrected / deleted ...\"></textarea>\n\t\t\t\t\t<button>Send edit suggestion</button>\n\t\t\t\t</form>`, {\n\t\t\t\t\tclasses: \"mv-inline\",\n\t\t\t\t\tdismiss: [\"button\", \"submit\"]\n\t\t\t\t});\n\n\t\t\tthis.notice.closed.then(form => {\n\t\t\t\tif (!form) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// We want to send a pull request\n\t\t\t\tthis.request(`repos/${this.username}/${this.repo}/pulls`, {\n\t\t\t\t\ttitle: \"Suggested edits to data\",\n\t\t\t\t\tbody: `Hello there! I used Mavo to suggest the following edits:\n${form.elements.edits.value}\nPreview my changes here: ${previewURL}`,\n\t\t\t\t\thead: `${this.user.username}:${this.branch}`,\n\t\t\t\t\tbase: this.branch\n\t\t\t\t}, \"POST\").then(prInfo => {\n\t\t\t\t\tnew Mavo.UI.Message(this.mavo, `<a href=\"${prInfo.html_url}\">Edit suggestion sent successfully!</a>`, {\n\t\t\t\t\t\tdismiss: [\"button\", \"timeout\"]\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.pullRequest(prInfo);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n\n\tlogin: function(passive) {\n\t\treturn this.oAuthenticate(passive)\n\t\t\t.then(() => this.getUser())\n\t\t\t.catch(xhr => {\n\t\t\t\tif (xhr.status == 401) {\n\t\t\t\t\t// Unauthorized. Access token we have is invalid, discard it\n\t\t\t\t\tthis.logout();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(u => {\n\t\t\t\tif (this.user) {\n\t\t\t\t\tthis.permissions.on([\"edit\", \"save\", \"logout\"]);\n\n\t\t\t\t\tif (this.repo) {\n\t\t\t\t\t\treturn this.request(`repos/${this.username}/${this.repo}`)\n\t\t\t\t\t\t\t.then(repoInfo => {\n\t\t\t\t\t\t\t\tif (this.branch === undefined) {\n\t\t\t\t\t\t\t\t\tthis.branch = repoInfo.default_branch;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn this.repoInfo = repoInfo;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t},\n\n\tcanPush: function() {\n\t\tif (this.repoInfo) {\n\t\t\treturn this.repoInfo.permissions.push;\n\t\t}\n\n\t\t// Repo does not exist so we can't check permissions\n\t\t// Just check if authenticated user is the same as our URL username\n\t\treturn this.user && this.user.username.toLowerCase() == this.username.toLowerCase();\n\t},\n\n\toAuthParams: () => \"&scope=repo,gist\",\n\n\tlogout: function() {\n\t\treturn this.oAuthLogout().then(() => {\n\t\t\tthis.user = null;\n\t\t});\n\t},\n\n\tgetUser: function() {\n\t\tif (this.user) {\n\t\t\treturn Promise.resolve(this.user);\n\t\t}\n\n\t\treturn this.request(\"user\").then(info => {\n\t\t\tthis.user = {\n\t\t\t\tusername: info.login,\n\t\t\t\tname: info.name || info.login,\n\t\t\t\tavatar: info.avatar_url,\n\t\t\t\turl: \"https://github.com/\" + info.login,\n\t\t\t\tinfo\n\t\t\t};\n\n\t\t\t$.fire(this.mavo.element, \"mavo:login\", { backend: this });\n\t\t});\n\t},\n\n\tstatic: {\n\t\tapiDomain: \"https://api.github.com/\",\n\t\toAuth: \"https://github.com/login/oauth/authorize\",\n\n\t\ttest: function(url) {\n\t\t\turl = new URL(url, location);\n\t\t\treturn /\\bgithub.com|raw.githubusercontent.com/.test(url.host);\n\t\t},\n\n\t\t/**\n\t\t * Parse Github URLs, return username, repo, branch, path\n\t\t */\n\t\tparseURL: function(url) {\n\t\t\tvar ret = {};\n\n\t\t\turl = new URL(url, location);\n\n\t\t\tvar path = url.pathname.slice(1).split(\"/\");\n\n\t\t\tret.username = path.shift();\n\t\t\tret.repo = path.shift();\n\n\t\t\tif (/raw.githubusercontent.com$/.test(url.host)) {\n\t\t\t\tret.branch = path.shift();\n\t\t\t}\n\t\t\telse if (/api.github.com$/.test(url.host)) {\n\t\t\t\t// raw API call, stop parsing and just return\n\t\t\t\treturn {};\n\t\t\t}\n\t\t\telse if (/github.com$/.test(url.host) && path[0] == \"blob\") {\n\t\t\t\tpath.shift();\n\t\t\t\tret.branch = path.shift();\n\t\t\t}\n\n\t\t\tret.path = path.join(\"/\");\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Fix atob() and btoa() so they can handle Unicode\n\t\tbtoa: str => btoa(unescape(encodeURIComponent(str))),\n\t\tatob: str => decodeURIComponent(escape(window.atob(str)))\n\t}\n}));\n\n})(Bliss);\n"]}