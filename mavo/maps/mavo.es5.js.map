{"version":3,"sources":["expression.js"],"names":["$","Mavo","attributes","push","_","Expression","Class","constructor","expression","eval","data","oldValue","value","hooks","run","function","compile","identifiers","match","exception","console","info","message","context","toString","changedBy","evt","indexOf","property","Functions","intersects","properties","action","collection","node","live","code","static","serializers","serialize","left","operator","right","argument","callee","arguments","map","join","test","consequent","alternate","object","name","elements","raw","body","transformations","Script","getOperatorName","details","operators","nodeLeft","args","unshift","length","type","ret","undefined","rewrite","parse","e","Function","self","jsep","addBinaryOp","removeBinaryOp","LogicalExpression","BinaryExpression","Syntax","start","end","regex","RegExp","escapeRegExp","str","lastIndex","tokenize","exec","index","substring","create","element","syntax","getAttribute","trim","split","ESCAPE","default","Bliss"],"mappings":"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","file":"../mavo.es5.js","sourcesContent":["(function($) {\n\nMavo.attributes.push(\"mv-expressions\");\n\nvar _ = Mavo.Expression = $.Class({\n\tconstructor: function(expression) {\n\t\tthis.expression = expression;\n\t},\n\n\teval: function(data) {\n\t\tthis.oldValue = this.value;\n\n\t\tMavo.hooks.run(\"expression-eval-beforeeval\", this);\n\n\t\ttry {\n\t\t\tif (!this.function) {\n\t\t\t\tthis.function = _.compile(this.expression);\n\t\t\t\tthis.identifiers = this.expression.match(/[$a-z][$\\w]*/ig) || [];\n\t\t\t}\n\n\t\t\tthis.value = this.function(data);\n\t\t}\n\t\tcatch (exception) {\n\t\t\tconsole.info(\"%cExpression error!\", \"color: red; font-weight: bold\", `${exception.message} in expression ${this.expression}`);\n\n\t\t\tMavo.hooks.run(\"expression-eval-error\", {context: this, exception});\n\n\t\t\tthis.value = exception;\n\t\t}\n\n\t\treturn this.value;\n\t},\n\n\ttoString() {\n\t\treturn this.expression;\n\t},\n\n\tchangedBy: function(evt) {\n\t\tif (!evt) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!this.identifiers) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.identifiers.indexOf(evt.property) > -1) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (Mavo.Functions.intersects(evt.properties, this.identifiers)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (evt.action != \"propertychange\") {\n\t\t\tif (Mavo.Functions.intersects([\"$index\", \"$previous\", \"$next\"], this.identifiers)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar collection = evt.node.collection || evt.node;\n\n\t\t\tif (Mavo.Functions.intersects(collection.properties, this.identifiers)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tlive: {\n\t\texpression: function(value) {\n\t\t\tvar code = value = value;\n\n\t\t\tthis.function = null;\n\t\t}\n\t},\n\n\tstatic: {\n\t\t/**\n\t\t * These serializers transform the AST into JS\n\t\t */\n\t\tserializers: {\n\t\t\t\"BinaryExpression\": node => `${_.serialize(node.left)} ${node.operator} ${_.serialize(node.right)}`,\n\t\t\t\"UnaryExpression\": node => `${node.operator}${_.serialize(node.argument)}`,\n\t\t\t\"CallExpression\": node => `${_.serialize(node.callee)}(${node.arguments.map(_.serialize).join(\", \")})`,\n\t\t\t\"ConditionalExpression\": node => `${_.serialize(node.test)}? ${_.serialize(node.consequent)} : ${_.serialize(node.alternate)}`,\n\t\t\t\"MemberExpression\": node => `get(${_.serialize(node.object)}, \"${node.property.name || node.property.value}\")`,\n\t\t\t\"ArrayExpression\": node => `[${node.elements.map(_.serialize).join(\", \")}]`,\n\t\t\t\"Literal\": node => node.raw,\n\t\t\t\"Identifier\": node => node.name,\n\t\t\t\"ThisExpression\": node => \"this\",\n\t\t\t\"Compound\": node => node.body.map(_.serialize).join(\" \")\n\t\t},\n\n\t\t/**\n\t\t * These are run before the serializers and transform the expression to support MavoScript\n\t\t */\n\t\ttransformations: {\n\t\t\t\"BinaryExpression\": node => {\n\t\t\t\tlet name = Mavo.Script.getOperatorName(node.operator);\n\t\t\t\tlet details = Mavo.Script.operators[name];\n\n\t\t\t\t// Flatten same operator calls\n\t\t\t\tvar nodeLeft = node;\n\t\t\t\tvar args = [];\n\n\t\t\t\tdo {\n\t\t\t\t\targs.unshift(nodeLeft.right);\n\t\t\t\t\tnodeLeft = nodeLeft.left;\n\t\t\t\t} while (Mavo.Script.getOperatorName(nodeLeft.operator) === name);\n\n\t\t\t\targs.unshift(nodeLeft);\n\n\t\t\t\tif (args.length > 1) {\n\t\t\t\t\treturn `${name}(${args.map(_.serialize).join(\", \")})`;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"CallExpression\": node => {\n\t\t\t\tif (node.callee.type == \"Identifier\" && node.callee.name == \"if\") {\n\t\t\t\t\tnode.callee.name = \"iff\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tserialize: node => {\n\t\t\tif (_.transformations[node.type]) {\n\t\t\t\tvar ret = _.transformations[node.type](node);\n\n\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn _.serializers[node.type](node);\n\t\t},\n\n\t\trewrite: function(code) {\n\t\t\ttry {\n\t\t\t\treturn _.serialize(_.parse(code));\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// Parsing as MavoScript failed, falling back to plain JS\n\t\t\t\treturn code;\n\t\t\t}\n\t\t},\n\n\t\tcompile: function(code) {\n\t\t\tcode = _.rewrite(code);\n\n\t\t\treturn new Function(\"data\", `with(Mavo.Functions._Trap)\n\t\t\t\t\twith (data || {}) {\n\t\t\t\t\t\treturn ${code};\n\t\t\t\t\t}`);\n\t\t},\n\n\t\tparse: self.jsep,\n\t}\n});\n\nif (self.jsep) {\n\tjsep.addBinaryOp(\"and\", 2);\n\tjsep.addBinaryOp(\"or\", 2);\n\tjsep.addBinaryOp(\"=\", 6);\n\tjsep.addBinaryOp(\"mod\", 10);\n\tjsep.removeBinaryOp(\"===\");\n}\n\n_.serializers.LogicalExpression = _.serializers.BinaryExpression;\n_.transformations.LogicalExpression = _.transformations.BinaryExpression;\n\n_.Syntax = $.Class({\n\tconstructor: function(start, end) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.regex = RegExp(`${Mavo.escapeRegExp(start)}([\\\\S\\\\s]+?)${Mavo.escapeRegExp(end)}`, \"gi\");\n\t},\n\n\ttest: function(str) {\n\t\tthis.regex.lastIndex = 0;\n\n\t\treturn this.regex.test(str);\n\t},\n\n\ttokenize: function(str) {\n\t\tvar match, ret = [], lastIndex = 0;\n\n\t\tthis.regex.lastIndex = 0;\n\n\t\twhile ((match = this.regex.exec(str)) !== null) {\n\t\t\t// Literal before the expression\n\t\t\tif (match.index > lastIndex) {\n\t\t\t\tret.push(str.substring(lastIndex, match.index));\n\t\t\t}\n\n\t\t\tlastIndex = this.regex.lastIndex;\n\n\t\t\tret.push(new Mavo.Expression(match[1]));\n\t\t}\n\n\t\t// Literal at the end\n\t\tif (lastIndex < str.length) {\n\t\t\tret.push(str.substring(lastIndex));\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tstatic: {\n\t\tcreate: function(element) {\n\t\t\tif (element) {\n\t\t\t\tvar syntax = element.getAttribute(\"mv-expressions\");\n\n\t\t\t\tif (syntax) {\n\t\t\t\t\tsyntax = syntax.trim();\n\t\t\t\t\treturn /\\s/.test(syntax)? new _.Syntax(...syntax.split(/\\s+/)) : _.Syntax.ESCAPE;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tESCAPE: -1\n\t}\n});\n\n_.Syntax.default = new _.Syntax(\"[\", \"]\");\n\n})(Bliss);\n"]}