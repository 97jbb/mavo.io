{"version":3,"sources":["functions.js"],"names":["_","Mavo","Functions","operators","$now","Date","urlOption","searchParams","URL","prototype","location","value","names","name","get","match","search","RegExp","obj","property","undefined","unique","arr","Set","sum","array","numbers","arguments","reduce","prev","current","average","length","min","Math","max","count","toArray","filter","a","round","num","decimals","isFinite","toLocaleString","useGrouping","maximumFractionDigits","iff","condition","iftrue","iffalse","Array","isArray","map","c","i","ret","replace","haystack","needle","replacement","iterations","item","needleRegex","escapeRegExp","counter","len","str","toLowerCase","indexOf","starts","ends","join","glue","idify","readable","identifier","$0","$1","$2","toUpperCase","uppercase","lowercase","Script","addUnaryOperator","o","operand","scalar","addBinaryOperator","symbol","symbols","identity","code","operands","logical","result","b","n","slice","getOperatorName","op","getNumericalOperands","p","r","isNaN","da","db","details","aliases","subtract","multiply","divide","lt","gt","eq","split","forEach","alias","_Trap","self","Proxy","functions","propertyL","hasOwnProperty","has","args","$$","number"],"mappings":"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","file":"../mavo.es5.js","sourcesContent":["/**\n * Functions available inside Mavo expressions\n */\n\n(function() {\n\nvar _ = Mavo.Functions = {\n\toperators: {\n\t\t\"=\": \"eq\"\n\t},\n\n\tget $now() {\n\t\treturn new Date();\n\t},\n\n\turlOption: function(...names) {\n\t\tvar searchParams = \"searchParams\" in URL.prototype? new URL(location).searchParams : null;\n\t\tvar value = null;\n\n\t\tfor (let name of names) {\n\t\t\tif (searchParams) {\n\t\t\t\tvalue = searchParams.get(name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar match = location.search.match(RegExp(`[?&]${name}(?:=([^&]+))?(?=&|$)`, \"i\"));\n\t\t\t\tvalue = match && (match[1] || \"\");\n\t\t\t}\n\n\t\t\tif (value !== null) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Get a property of an object. Used by the . operator to prevent TypeErrors\n\t */\n\tget: function(obj, property) {\n\t\treturn obj && obj[property] !== undefined? obj[property] : null;\n\t},\n\n\tunique: function(arr) {\n\t\treturn [...new Set(arr)];\n\t},\n\n\t/*********************\n\t * Number functions\n\t *********************/\n\n\t/**\n\t * Aggregate sum\n\t */\n\tsum: function(array) {\n\t\treturn numbers(array, arguments).reduce((prev, current) => {\n\t\t\treturn +prev + (+current || 0);\n\t\t}, 0);\n\t},\n\n\t/**\n\t * Average of an array of numbers\n\t */\n\taverage: function(array) {\n\t\tarray = numbers(array, arguments);\n\n\t\treturn array.length && _.sum(array) / array.length;\n\t},\n\n\t/**\n\t * Min of an array of numbers\n\t */\n\tmin: function(array) {\n\t\treturn Math.min(...numbers(array, arguments));\n\t},\n\n\t/**\n\t * Max of an array of numbers\n\t */\n\tmax: function(array) {\n\t\treturn Math.max(...numbers(array, arguments));\n\t},\n\n\tcount: function(array) {\n\t\treturn Mavo.toArray(array).filter(a => a !== null && a !== false && a !== \"\").length;\n\t},\n\n\tround: function(num, decimals) {\n\t\tif (!num || !decimals || !isFinite(num)) {\n\t\t\treturn Math.round(num);\n\t\t}\n\n\t\treturn +num.toLocaleString(\"en-US\", {\n\t\t\tuseGrouping: false,\n\t\t\tmaximumFractionDigits: decimals\n\t\t});\n\t},\n\n\tiff: function(condition, iftrue, iffalse=\"\") {\n\t\tif (Array.isArray(condition)) {\n\t\t\treturn condition.map((c, i) => {\n\t\t\t\tvar ret = c? iftrue : iffalse;\n\n\t\t\t\tif (Array.isArray(ret)) {\n\t\t\t\t\treturn ret[Math.min(i, ret.length - 1)];\n\t\t\t\t}\n\n\t\t\t\treturn ret;\n\t\t\t});\n\t\t}\n\n\t\treturn condition? iftrue : iffalse;\n\t},\n\n\t/*********************\n\t * String functions\n\t *********************/\n\n\t/**\n\t * Replace all occurences of a string with another string\n\t */\n\treplace: function(haystack, needle, replacement = \"\", iterations = 1) {\n\t\tif (Array.isArray(haystack)) {\n\t\t\treturn haystack.map(item => _.replace(item, needle, replacement));\n\t\t}\n\n\t\t// Simple string replacement\n\t\tvar needleRegex = RegExp(Mavo.escapeRegExp(needle), \"g\");\n\t\tvar ret = haystack, prev;\n\t\tvar counter = 0;\n\n\t\twhile (ret != prev && (counter++ < iterations)) {\n\t\t\tprev = ret;\n\t\t\tret = ret.replace(needleRegex, replacement);\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tlen: str => (str || \"\").length,\n\t/**\n\t * Case insensitive search\n\t */\n\tsearch: (haystack, needle) => haystack && needle? haystack.toLowerCase().indexOf(needle.toLowerCase()) : -1,\n\n\tstarts: (haystack, needle) => _.search(haystack, needle) === 0,\n\tends: function(haystack, needle) {\n\t\tvar i = _.search(haystack, needle);\n\t\treturn  i > -1 && i === haystack.length - needle.length;\n\t},\n\n\tjoin: function(array, glue = \"\") {\n\t\treturn Mavo.toArray(array).join(glue);\n\t},\n\n\tidify: readable => ((readable || \"\") + \"\")\n\t\t.replace(/\\s+/g, \"-\") // Convert whitespace to hyphens\n\t\t.replace(/[^\\w-]/g, \"\") // Remove weird characters\n\t\t.toLowerCase(),\n\n\t// Convert an identifier to readable text that can be used as a label\n\treadable: function (identifier) {\n\t\t// Is it camelCase?\n\t\treturn identifier && identifier\n\t\t\t\t .replace(/([a-z])([A-Z])(?=[a-z])/g, ($0, $1, $2) => $1 + \" \" + $2.toLowerCase()) // camelCase?\n\t\t\t\t .replace(/([a-z])[_\\/-](?=[a-z])/g, \"$1 \") // Hyphen-separated / Underscore_separated?\n\t\t\t\t .replace(/^[a-z]/, $0 => $0.toUpperCase()); // Capitalize\n\t},\n\n\tuppercase: str => (str + \"\").toUpperCase(),\n\tlowercase: str => (str + \"\").toLowerCase(),\n};\n\nMavo.Script = {\n\taddUnaryOperator: function(name, o) {\n\t\treturn operand => Array.isArray(operand)? operand.map(o.scalar) : o.scalar(operand);\n\t},\n\n\t/**\n\t * Extend a scalar operator to arrays, or arrays and scalars\n\t * The operation between arrays is applied element-wise.\n\t * The operation operation between a scalar and an array will result in\n\t * the operation being applied between the scalar and every array element.\n\t */\n\taddBinaryOperator: function(name, o) {\n\t\tif (o.symbol) {\n\t\t\t// Build map of symbols to function names for easy rewriting\n\t\t\tfor (let symbol of Mavo.toArray(o.symbol)) {\n\t\t\t\tMavo.Script.symbols[symbol] = name;\n\t\t\t}\n\t\t}\n\n\t\to.identity = o.identity === undefined? 0 : o.identity;\n\n\t\treturn _[name] = o.code || function(...operands) {\n\t\t\tif (operands.length === 1) {\n\t\t\t\tif (Array.isArray(operands[0])) {\n\t\t\t\t\t// Operand is an array of operands, expand it out\n\t\t\t\t\toperands = [...operands[0]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar prev = o.logical? o.identity : operands[0], result;\n\n\t\t\tfor (let i = 1; i < operands.length; i++) {\n\t\t\t\tlet a = o.logical? operands[i - 1] : prev;\n\t\t\t\tlet b = operands[i];\n\n\t\t\t\tif (Array.isArray(b)) {\n\t\t\t\t\tif (typeof o.identity == \"number\") {\n\t\t\t\t\t\tb = numbers(b);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t\tresult = [\n\t\t\t\t\t\t\t...b.map((n, i) => o.scalar(a[i] === undefined? o.identity : a[i], n)),\n\t\t\t\t\t\t\t...a.slice(b.length)\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresult = b.map(n => o.scalar(a, n));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Operand is scalar\n\t\t\t\t\tif (typeof o.identity == \"number\") {\n\t\t\t\t\t\tb = +b;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t\tresult = a.map(n => o.scalar(n, b));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresult = o.scalar(a, b);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (o.reduce) {\n\t\t\t\t\tprev = o.reduce(prev, result, a, b);\n\t\t\t\t}\n\t\t\t\telse if (o.logical) {\n\t\t\t\t\tprev = prev && result;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tprev = result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn prev;\n\t\t};\n\t},\n\n\t/**\n\t * Mapping of operator symbols to function name.\n\t * Populated via addOperator() and addLogicalOperator()\n\t */\n\tsymbols: {},\n\n\tgetOperatorName: op => Mavo.Script.symbols[op] || op,\n\n\t/**\n\t * Operations for elements and scalars.\n\t * Operations between arrays happen element-wise.\n\t * Operations between a scalar and an array will result in the operation being performed between the scalar and every array element.\n\t * Ordered by precedence (higher to lower)\n\t * @param scalar {Function} The operation between two scalars\n\t * @param identity The operation’s identity element. Defaults to 0.\n\t */\n\toperators: {\n\t\t\"not\": {\n\t\t\tscalar: a => a => !a\n\t\t},\n\t\t\"multiply\": {\n\t\t\tscalar: (a, b) => a * b,\n\t\t\tidentity: 1,\n\t\t\tsymbol: \"*\"\n\t\t},\n\t\t\"divide\": {\n\t\t\tscalar: (a, b) => a / b,\n\t\t\tidentity: 1,\n\t\t\tsymbol: \"/\"\n\t\t},\n\t\t\"add\": {\n\t\t\tscalar: (a, b) => +a + +b,\n\t\t\tsymbol: \"+\"\n\t\t},\n\t\t\"subtract\": {\n\t\t\tscalar: (a, b) => a - b,\n\t\t\tsymbol: \"-\"\n\t\t},\n\t\t\"mod\": {\n\t\t\tscalar: (a, b) => a % b\n\t\t},\n\t\t\"lte\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a <= b;\n\t\t\t},\n\t\t\tidentity: true,\n\t\t\tsymbol: \"<=\"\n\t\t},\n\t\t\"lt\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a < b;\n\t\t\t},\n\t\t\tidentity: true,\n\t\t\tsymbol: \"<\"\n\t\t},\n\t\t\"gte\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a >= b;\n\t\t\t},\n\t\t\tidentity: true,\n\t\t\tsymbol: \">=\"\n\t\t},\n\t\t\"gt\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a > b;\n\t\t\t},\n\t\t\tidentity: true,\n\t\t\tsymbol: \">\"\n\t\t},\n\t\t\"eq\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => a == b,\n\t\t\tsymbol: [\"=\", \"==\"],\n\t\t\tidentity: true\n\t\t},\n\t\t\"neq\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => a != b,\n\t\t\tsymbol: [\"!=\"],\n\t\t\tidentity: true\n\t\t},\n\t\t\"and\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => !!a && !!b,\n\t\t\tidentity: true,\n\t\t\tsymbol: \"&&\"\n\t\t},\n\t\t\"or\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => !!a || !!b,\n\t\t\treduce: (p, r) => p || r,\n\t\t\tidentity: false,\n\t\t\tsymbol: \"||\"\n\t\t},\n\t\t\"concatenate\": {\n\t\t\tsymbol: \"&\",\n\t\t\tidentity: \"\",\n\t\t\tscalar: (a, b) => \"\" + (a || \"\") + (b || \"\")\n\t\t},\n\t\t\"filter\": {\n\t\t\tscalar: (a, b) => b? a : null\n\t\t}\n\t},\n\n\tgetNumericalOperands: function(a, b) {\n\t\tif (isNaN(a) || isNaN(b)) {\n\t\t\t// Try comparing as dates\n\t\t\tvar da = new Date(a), db = new Date(b);\n\n\t\t\tif (!isNaN(da) && !isNaN(db)) {\n\t\t\t\t// Both valid dates\n\t\t\t\treturn [da, db];\n\t\t\t}\n\t\t}\n\n\t\treturn [a, b];\n\t}\n};\n\nfor (let name in Mavo.Script.operators) {\n\tlet details = Mavo.Script.operators[name];\n\n\tif (details.scalar.length < 2) {\n\t\tMavo.Script.addUnaryOperator(name, details);\n\t}\n\telse {\n\t\tMavo.Script.addBinaryOperator(name, details);\n\t}\n}\n\nvar aliases = {\n\taverage: \"avg\",\n\tiff: \"iff IF\",\n\tsubtract: \"minus\",\n\tmultiply: \"mult product\",\n\tdivide: \"div\",\n\tlt: \"lessThan smaller\",\n\tgt: \"moreThan greater greaterThan bigger\",\n\teq: \"equal equality\"\n};\n\nfor (let name in aliases) {\n\taliases[name].split(/\\s+/g).forEach(alias => _[alias] = _[name]);\n}\n\n// Make function names case insensitive\nMavo.Functions._Trap = self.Proxy? new Proxy(_, {\n\tget: (functions, property) => {\n\t\tif (property in functions) {\n\t\t\treturn functions[property];\n\t\t}\n\n\t\tvar propertyL = property.toLowerCase && property.toLowerCase();\n\n\t\tif (propertyL && functions.hasOwnProperty(propertyL)) {\n\t\t\treturn functions[propertyL];\n\t\t}\n\n\t\tif (property in Math || propertyL in Math) {\n\t\t\treturn Math[property] || Math[propertyL];\n\t\t}\n\n\t\tif (property in self) {\n\t\t\treturn self[property];\n\t\t}\n\n\t\t// Prevent undefined at all costs\n\t\treturn property;\n\t},\n\n\t// Super ugly hack, but otherwise data is not\n\t// the local variable it should be, but the string \"data\"\n\t// so all property lookups fail.\n\thas: (functions, property) => property != \"data\"\n}) : Mavo.Functions;\n\n/**\n * Private helper methods\n */\nfunction numbers(array, args) {\n\tarray = Array.isArray(array)? array : (args? $$(args) : [array]);\n\n\treturn array.filter(number => !isNaN(number) && number !== \"\").map(n => +n);\n}\n\n})();\n"]}