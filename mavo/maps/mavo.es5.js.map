{"version":3,"sources":["functions.js"],"names":["_","Mavo","Functions","operators","get","obj","property","undefined","Array","isArray","isNaN","first","i","length","id","map","e","unique","arr","Set","intersects","arr1","arr2","every","has","el","sum","array","numbers","arguments","reduce","prev","current","average","min","Math","max","count","toArray","filter","a","round","num","decimals","isFinite","toLocaleString","useGrouping","maximumFractionDigits","th","ord","iff","condition","iftrue","iffalse","c","ret","replace","haystack","needle","replacement","iterations","item","needleRegex","RegExp","escapeRegExp","counter","len","str","search","toLowerCase","indexOf","starts","ends","join","glue","idify","readable","identifier","$0","$1","$2","toUpperCase","uppercase","lowercase","json","safeToJSON","data","$now","Date","$today","date","year","getDateComponent","month","day","weekday","hour","hour12","minute","second","twodigit","time","minutes","floor","abs","seconds","hours","days","weeks","months","years","localTimezone","getTimezoneOffset","log","args","console","$","lazy","url","URL","location","searchParams","pair","Object","defineProperty","value","Script","addUnaryOperator","name","o","operand","scalar","addBinaryOperator","symbol","symbols","identity","code","operands","logical","result","b","n","slice","getOperatorName","op","dateA","toDate","dateB","getNumericalOperands","p","r","da","db","details","aliases","subtract","multiply","divide","lt","gt","eq","split","forEach","alias","_Trap","self","Proxy","functions","propertyL","hasOwnProperty","toString","$$","number","twodigits","Intl","NumberFormat","minimumIntegerDigits","format","bind","type","trim","test","timezone","match","local","sign","options","locale","component","option","extend","getDay","Number","shortname"],"mappings":"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","file":"../mavo.es5.js","sourcesContent":["/**\n * Functions available inside Mavo expressions\n */\n\n(function() {\n\nvar _ = Mavo.Functions = {\n\toperators: {\n\t\t\"=\": \"eq\"\n\t},\n\n\t/**\n\t * Get a property of an object. Used by the . operator to prevent TypeErrors\n\t */\n\tget: function(obj, property) {\n\t\tif (obj && obj[property] !== undefined) {\n\t\t\treturn obj[property];\n\t\t}\n\n\t\tif (Array.isArray(obj) && isNaN(property)) {\n\t\t\t// Array and non-numerical property\n\t\t\tfor (var first of obj) {\n\t\t\t\tif (first && typeof first === \"object\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\tif (\"id\" in first) {\n\t\t\t\t\t// Try by id?\n\t\t\t\t\tfor (var i=0; i<obj.length; i++) {\n\t\t\t\t\t\tif (obj[i] && obj[i].id == property) {\n\t\t\t\t\t\t\treturn _.get(obj, i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Still here, get that property from the objects inside\n\t\t\t\treturn obj.map(e => _.get(e, property));\n\t\t\t}\n\t\t}\n\n\t\t// Not found :(\n\t\treturn null;\n\t},\n\n\tunique: function(arr) {\n\t\tif (!Array.isArray(arr)) {\n\t\t\treturn arr;\n\t\t}\n\n\t\treturn [...new Set(arr)];\n\t},\n\n\t/**\n\t * Do two arrays have a non-empty intersection?\n\t * @return {Boolean}\n\t */\n\tintersects: (arr1, arr2) => {\n\t\tif (arr1 && arr2) {\n\t\t\tarr2 = new Set(arr2);\n\n\t\t\treturn !arr1.every(el => arr2.has(el));\n\t\t}\n\t},\n\n\t/*********************\n\t * Number functions\n\t *********************/\n\n\t/**\n\t * Aggregate sum\n\t */\n\tsum: function(array) {\n\t\treturn numbers(array, arguments).reduce((prev, current) => {\n\t\t\treturn +prev + (+current || 0);\n\t\t}, 0);\n\t},\n\n\t/**\n\t * Average of an array of numbers\n\t */\n\taverage: function(array) {\n\t\tarray = numbers(array, arguments);\n\n\t\treturn array.length && _.sum(array) / array.length;\n\t},\n\n\t/**\n\t * Min of an array of numbers\n\t */\n\tmin: function(array) {\n\t\treturn Math.min(...numbers(array, arguments));\n\t},\n\n\t/**\n\t * Max of an array of numbers\n\t */\n\tmax: function(array) {\n\t\treturn Math.max(...numbers(array, arguments));\n\t},\n\n\tcount: function(array) {\n\t\treturn Mavo.toArray(array).filter(a => a !== null && a !== false && a !== \"\").length;\n\t},\n\n\tround: function(num, decimals) {\n\t\tif (!num || !decimals || !isFinite(num)) {\n\t\t\treturn Math.round(num);\n\t\t}\n\n\t\treturn +num.toLocaleString(\"en-US\", {\n\t\t\tuseGrouping: false,\n\t\t\tmaximumFractionDigits: decimals\n\t\t});\n\t},\n\n\tth: function(num) {\n\t\tif (num === null || num === \"\") {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (ord < 10 || ord > 20) {\n\t\t\tvar ord = [\"th\", \"st\", \"nd\", \"th\"][num % 10];\n\t\t}\n\n\t\tord = ord || \"th\";\n\n\t\treturn num + ord;\n\t},\n\n\tiff: function(condition, iftrue, iffalse=\"\") {\n\t\tif (Array.isArray(condition)) {\n\t\t\treturn condition.map((c, i) => {\n\t\t\t\tvar ret = c? iftrue : iffalse;\n\n\t\t\t\tif (Array.isArray(ret)) {\n\t\t\t\t\treturn ret[Math.min(i, ret.length - 1)];\n\t\t\t\t}\n\n\t\t\t\treturn ret;\n\t\t\t});\n\t\t}\n\n\t\treturn condition? iftrue : iffalse;\n\t},\n\n\t/*********************\n\t * String functions\n\t *********************/\n\n\t/**\n\t * Replace all occurences of a string with another string\n\t */\n\treplace: function(haystack, needle, replacement = \"\", iterations = 1) {\n\t\tif (Array.isArray(haystack)) {\n\t\t\treturn haystack.map(item => _.replace(item, needle, replacement));\n\t\t}\n\n\t\t// Simple string replacement\n\t\tvar needleRegex = RegExp(Mavo.escapeRegExp(needle), \"g\");\n\t\tvar ret = haystack, prev;\n\t\tvar counter = 0;\n\n\t\twhile (ret != prev && (counter++ < iterations)) {\n\t\t\tprev = ret;\n\t\t\tret = ret.replace(needleRegex, replacement);\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tlen: str => (str || \"\").length,\n\t/**\n\t * Case insensitive search\n\t */\n\tsearch: (haystack, needle) => haystack && needle? (haystack + \"\").toLowerCase().indexOf((needle + \"\").toLowerCase()) : -1,\n\n\tstarts: (haystack, needle) => _.search((haystack + \"\"), (needle + \"\")) === 0,\n\tends: function(haystack, needle) {\n\t\thaystack += \"\";\n\t\tneedle += \"\";\n\t\tvar i = _.search(haystack, needle);\n\t\treturn  i > -1 && i === haystack.length - needle.length;\n\t},\n\n\tjoin: function(array, glue = \"\") {\n\t\treturn Mavo.toArray(array).join(glue);\n\t},\n\n\tidify: function(readable) {\n\t\treturn ((readable || \"\") + \"\")\n\t\t\t.replace(/\\s+/g, \"-\") // Convert whitespace to hyphens\n\t\t\t.replace(/[^\\w-]/g, \"\") // Remove weird characters\n\t\t\t.toLowerCase();\n\t},\n\n\t// Convert an identifier to readable text that can be used as a label\n\treadable: function (identifier) {\n\t\t// Is it camelCase?\n\t\treturn identifier && identifier\n\t\t\t\t .replace(/([a-z])([A-Z])(?=[a-z])/g, ($0, $1, $2) => $1 + \" \" + $2.toLowerCase()) // camelCase?\n\t\t\t\t .replace(/([a-z])[_\\/-](?=[a-z])/g, \"$1 \") // Hyphen-separated / Underscore_separated?\n\t\t\t\t .replace(/^[a-z]/, $0 => $0.toUpperCase()); // Capitalize\n\t},\n\n\tuppercase: str => (str + \"\").toUpperCase(),\n\tlowercase: str => (str + \"\").toLowerCase(),\n\n\tjson: data => Mavo.safeToJSON(data),\n\n\t/*********************\n\t * Date functions\n\t *********************/\n\n\tget $now() {\n\t\treturn new Date();\n\t},\n\n\tget $today() {\n\t\treturn _.date(new Date());\n\t},\n\n\tyear: getDateComponent(\"year\"),\n\tmonth: getDateComponent(\"month\"),\n\tday: getDateComponent(\"day\"),\n\tweekday: getDateComponent(\"weekday\"),\n\thour: getDateComponent(\"hour\"),\n\thour12: getDateComponent(\"hour\", \"numeric\", {hour12:true}),\n\tminute: getDateComponent(\"minute\"),\n\tsecond: getDateComponent(\"second\"),\n\n\tdate: date => {\n\t\treturn `${_.year(date)}-${_.month(date).twodigit}-${_.day(date).twodigit}`;\n\t},\n\ttime: date => {\n\t\treturn `${_.hour(date).twodigit}:${_.minute(date).twodigit}:${_.second(date).twodigit}`;\n\t},\n\n\tminutes: seconds => Math.floor(Math.abs(seconds) / 60),\n\thours: seconds => Math.floor(Math.abs(seconds) / 3600),\n\tdays: seconds => Math.floor(Math.abs(seconds) / 86400),\n\tweeks: seconds => Math.floor(Math.abs(seconds) / 604800),\n\tmonths: seconds => Math.floor(Math.abs(seconds) / (30.4368 * 86400)),\n\tyears: seconds => Math.floor(Math.abs(seconds) / (30.4368 * 86400 * 12)),\n\n\tlocalTimezone: -(new Date()).getTimezoneOffset(),\n\n\t// Log to the console and return\n\tlog: (...args) => {\n\t\tconsole.log(args);\n\t\treturn args[0];\n\t}\n};\n\n// $url: Read-only syntactic sugar for URL stuff\n$.lazy(Mavo.Functions, \"$url\", function() {\n\tvar ret = {};\n\tvar url = new URL(location);\n\n\tfor (let pair of url.searchParams) {\n\t\tret[pair[0]] = pair[1];\n\t}\n\n\tObject.defineProperty(ret, \"toString\", {\n\t\tvalue: () => new URL(location)\n\t});\n\n\treturn ret;\n});\n\nMavo.Script = {\n\taddUnaryOperator: function(name, o) {\n\t\treturn operand => Array.isArray(operand)? operand.map(o.scalar) : o.scalar(operand);\n\t},\n\n\t/**\n\t * Extend a scalar operator to arrays, or arrays and scalars\n\t * The operation between arrays is applied element-wise.\n\t * The operation operation between a scalar and an array will result in\n\t * the operation being applied between the scalar and every array element.\n\t */\n\taddBinaryOperator: function(name, o) {\n\t\tif (o.symbol) {\n\t\t\t// Build map of symbols to function names for easy rewriting\n\t\t\tfor (let symbol of Mavo.toArray(o.symbol)) {\n\t\t\t\tMavo.Script.symbols[symbol] = name;\n\t\t\t}\n\t\t}\n\n\t\to.identity = o.identity === undefined? 0 : o.identity;\n\n\t\treturn _[name] = o.code || function(...operands) {\n\t\t\tif (operands.length === 1) {\n\t\t\t\tif (Array.isArray(operands[0])) {\n\t\t\t\t\t// Operand is an array of operands, expand it out\n\t\t\t\t\toperands = [...operands[0]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar prev = o.logical? o.identity : operands[0], result;\n\n\t\t\tfor (let i = 1; i < operands.length; i++) {\n\t\t\t\tlet a = o.logical? operands[i - 1] : prev;\n\t\t\t\tlet b = operands[i];\n\n\t\t\t\tif (Array.isArray(b)) {\n\t\t\t\t\tif (typeof o.identity == \"number\") {\n\t\t\t\t\t\tb = numbers(b);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t\tresult = [\n\t\t\t\t\t\t\t...b.map((n, i) => o.scalar(a[i] === undefined? o.identity : a[i], n)),\n\t\t\t\t\t\t\t...a.slice(b.length)\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresult = b.map(n => o.scalar(a, n));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (Array.isArray(a)) {\n\t\t\t\t\tresult = a.map(n => o.scalar(n, b));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult = o.scalar(a, b);\n\t\t\t\t}\n\n\t\t\t\tif (o.reduce) {\n\t\t\t\t\tprev = o.reduce(prev, result, a, b);\n\t\t\t\t}\n\t\t\t\telse if (o.logical) {\n\t\t\t\t\tprev = prev && result;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tprev = result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn prev;\n\t\t};\n\t},\n\n\t/**\n\t * Mapping of operator symbols to function name.\n\t * Populated via addOperator() and addLogicalOperator()\n\t */\n\tsymbols: {},\n\n\tgetOperatorName: op => Mavo.Script.symbols[op] || op,\n\n\t/**\n\t * Operations for elements and scalars.\n\t * Operations between arrays happen element-wise.\n\t * Operations between a scalar and an array will result in the operation being performed between the scalar and every array element.\n\t * Ordered by precedence (higher to lower)\n\t * @param scalar {Function} The operation between two scalars\n\t * @param identity The operation’s identity element. Defaults to 0.\n\t */\n\toperators: {\n\t\t\"not\": {\n\t\t\tscalar: a => a => !a\n\t\t},\n\t\t\"multiply\": {\n\t\t\tscalar: (a, b) => a * b,\n\t\t\tidentity: 1,\n\t\t\tsymbol: \"*\"\n\t\t},\n\t\t\"divide\": {\n\t\t\tscalar: (a, b) => a / b,\n\t\t\tidentity: 1,\n\t\t\tsymbol: \"/\"\n\t\t},\n\t\t\"add\": {\n\t\t\tscalar: (a, b) => +a + +b,\n\t\t\tsymbol: \"+\"\n\t\t},\n\t\t\"subtract\": {\n\t\t\tscalar: (a, b) => {\n\t\t\t\tif (isNaN(a) || isNaN(b)) {\n\t\t\t\t\tvar dateA = toDate(a), dateB = toDate(b);\n\n\t\t\t\t\tif (dateA && dateB) {\n\t\t\t\t\t\treturn (dateA - dateB)/1000;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn a - b;\n\t\t\t},\n\t\t\tsymbol: \"-\"\n\t\t},\n\t\t\"mod\": {\n\t\t\tscalar: (a, b) => {\n\t\t\t\tvar ret = a % b;\n\t\t\t\tret += ret < 0? b : 0;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t},\n\t\t\"lte\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a <= b;\n\t\t\t},\n\t\t\tidentity: true,\n\t\t\tsymbol: \"<=\"\n\t\t},\n\t\t\"lt\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a < b;\n\t\t\t},\n\t\t\tidentity: true,\n\t\t\tsymbol: \"<\"\n\t\t},\n\t\t\"gte\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a >= b;\n\t\t\t},\n\t\t\tidentity: true,\n\t\t\tsymbol: \">=\"\n\t\t},\n\t\t\"gt\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a > b;\n\t\t\t},\n\t\t\tidentity: true,\n\t\t\tsymbol: \">\"\n\t\t},\n\t\t\"eq\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => a == b,\n\t\t\tsymbol: [\"=\", \"==\"],\n\t\t\tidentity: true\n\t\t},\n\t\t\"neq\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => a != b,\n\t\t\tsymbol: [\"!=\"],\n\t\t\tidentity: true\n\t\t},\n\t\t\"and\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => !!a && !!b,\n\t\t\tidentity: true,\n\t\t\tsymbol: \"&&\"\n\t\t},\n\t\t\"or\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => !!a || !!b,\n\t\t\treduce: (p, r) => p || r,\n\t\t\tidentity: false,\n\t\t\tsymbol: \"||\"\n\t\t},\n\t\t\"concatenate\": {\n\t\t\tsymbol: \"&\",\n\t\t\tidentity: \"\",\n\t\t\tscalar: (a, b) => \"\" + (a || \"\") + (b || \"\")\n\t\t},\n\t\t\"filter\": {\n\t\t\tscalar: (a, b) => b? a : null\n\t\t}\n\t},\n\n\tgetNumericalOperands: function(a, b) {\n\t\tif (isNaN(a) || isNaN(b)) {\n\t\t\t// Try comparing as dates\n\t\t\tvar da = toDate(a), db = toDate(b);\n\n\t\t\tif (da && db) {\n\t\t\t\t// Both valid dates\n\t\t\t\treturn [da, db];\n\t\t\t}\n\t\t}\n\n\t\treturn [a, b];\n\t}\n};\n\nfor (let name in Mavo.Script.operators) {\n\tlet details = Mavo.Script.operators[name];\n\n\tif (details.scalar.length < 2) {\n\t\tMavo.Script.addUnaryOperator(name, details);\n\t}\n\telse {\n\t\tMavo.Script.addBinaryOperator(name, details);\n\t}\n}\n\nvar aliases = {\n\taverage: \"avg\",\n\tiff: \"iff IF\",\n\tsubtract: \"minus\",\n\tmultiply: \"mult product\",\n\tdivide: \"div\",\n\tlt: \"lessThan smaller\",\n\tgt: \"moreThan greater greaterThan bigger\",\n\teq: \"equal equality\",\n\tth: \"ordinal\"\n};\n\nfor (let name in aliases) {\n\taliases[name].split(/\\s+/g).forEach(alias => _[alias] = _[name]);\n}\n\n// Make function names case insensitive\nMavo.Functions._Trap = self.Proxy? new Proxy(_, {\n\tget: (functions, property) => {\n\t\tvar ret;\n\n\t\tif (property in functions) {\n\t\t\tret = functions[property];\n\t\t}\n\t\telse {\n\t\t\tvar propertyL = property.toLowerCase && property.toLowerCase();\n\n\t\t\tif (propertyL && functions.hasOwnProperty(propertyL)) {\n\t\t\t\tret = functions[propertyL];\n\t\t\t}\n\t\t\telse if (property in Math || propertyL in Math) {\n\t\t\t\tret = Math[property] || Math[propertyL];\n\t\t\t}\n\t\t}\n\n\t\tif (ret) {\n\t\t\t// For when function names are used as unquoted strings, see #160\n\t\t\tret.toString = () => property;\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (property in self) {\n\t\t\treturn self[property];\n\t\t}\n\n\t\t// Prevent undefined at all costs\n\t\treturn property;\n\t},\n\n\t// Super ugly hack, but otherwise data is not\n\t// the local variable it should be, but the string \"data\"\n\t// so all property lookups fail.\n\thas: (functions, property) => property != \"data\"\n}) : Mavo.Functions;\n\n/**\n * Private helper methods\n */\nfunction numbers(array, args) {\n\tarray = Array.isArray(array)? array : (args? $$(args) : [array]);\n\n\treturn array.filter(number => !isNaN(number) && number !== \"\").map(n => +n);\n}\n\nvar twodigits = new Intl.NumberFormat(\"en\", {\n\tminimumIntegerDigits: \"2\"\n});\n\ntwodigits = twodigits.format.bind(twodigits);\n\nfunction toDate(date) {\n\tif (!date) {\n\t\treturn null;\n\t}\n\n\tif ($.type(date) === \"string\") {\n\t\tdate = date.trim();\n\n\t\t// Fix up time format\n\t\tif (!/^\\d{4}-\\d{2}-\\d{2}/.test(date)) {\n\t\t\t// No date, add today’s\n\t\t\tdate = _.$today + \" \" + date;\n\t\t}\n\n\t\tif (date.indexOf(\":\") === -1) {\n\t\t\t// Add a time if one doesn't exist\n\t\t\tdate += \"T00:00:00\";\n\t\t}\n\t\telse {\n\t\t\t// Make sure time starts with T, due to Safari bug\n\t\t\tdate = date.replace(/\\-(\\d{2})\\s+(?=\\d{2}:)/, \"-$1T\");\n\t\t}\n\n\t\t// Remove all whitespace\n\t\tdate = date.replace(/\\s+/g, \"\");\n\n\t\t// If no timezone, insert local\n\t\tvar timezone = (date.match(/[+-]\\d{2}:?\\d{2}|Z$/) || [])[0];\n\n\t\tif (!timezone) {\n\t\t\tvar local = _.localTimezone;\n\t\t\tvar minutes = Math.abs(local % 60);\n\t\t\tvar hours = (Math.abs(local) - minutes) / 60;\n\t\t\tvar sign = local < 0? \"-\" : \"+\";\n\t\t\tdate += sign + twodigits(hours) + \":\" + twodigits(minutes);\n\t\t}\n\t}\nconsole.log(date);\n\tdate = new Date(date);\n\n\tif (isNaN(date)) {\n\t\treturn null;\n\t}\n\n\treturn date;\n}\n\nfunction toLocaleString(date, options) {\n\tvar ret = date.toLocaleString(Mavo.locale, options);\n\n\tret = ret.replace(/\\u200e/g, \"\"); // Stupid Edge bug\n\n\treturn ret;\n}\n\nfunction getDateComponent(component, option = \"numeric\", o) {\n\treturn function(date, format = option) {\n\t\tdate = toDate(date);\n\n\t\tif (!date) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tvar options = $.extend({\n\t\t\t[component]: format,\n\t\t\thour12: false\n\t\t}, o);\n\n\t\tif (component == \"weekday\" && format == \"numeric\") {\n\t\t\tret = date.getDay() || 7;\n\t\t}\n\t\telse {\n\t\t\tvar ret = toLocaleString(date, options);\n\t\t}\n\n\t\tif (format == \"numeric\" && !isNaN(ret)) {\n\n\t\t\tif (component != \"year\") {\n\t\t\t\t// We don't want years to be formatted like 2,017!\n\t\t\t\tret = new Number(ret);\n\t\t\t}\n\n\t\t\tif (component == \"month\" || component == \"weekday\") {\n\t\t\t\toptions[component] = \"long\";\n\t\t\t\tret.name = toLocaleString(date, options);\n\n\t\t\t\toptions[component] = \"short\";\n\t\t\t\tret.shortname = toLocaleString(date, options);\n\t\t\t}\n\n\t\t\tif (component != \"weekday\") {\n\t\t\t\toptions[component] = \"2-digit\";\n\t\t\t\tret.twodigit = toLocaleString(date, options);\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t};\n}\n\n})();\n"]}