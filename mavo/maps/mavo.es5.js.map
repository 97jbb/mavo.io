{"version":3,"sources":["formats.js"],"names":["$","$$","_","Mavo","Formats","base","Base","Class","abstract","constructor","backend","proxy","parse","content","stringify","data","static","Promise","resolve","serialized","extensions","dependencies","ready","all","map","include","d","test","url","json","JSON","extends","toJSON","text","Text","property","mavo","root","getNames","me","csv","CSV","options","extend","defaultOptions","header","dynamicTyping","skipEmptyLines","self","Papa","delimiter","meta","linebreak","aborted","errors","pop","unparse","Object","defineProperty","value","format","toLowerCase","id","Format","pathname","raw","extension","match","indexOf","Bliss"],"mappings":"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","file":"../mavo.es5.js","sourcesContent":["(function($, $$) {\n\nvar _ = Mavo.Formats = {};\n\nvar base = _.Base = $.Class({\n\tabstract: true,\n\tconstructor: function(backend) {\n\t\tthis.backend = backend;\n\t},\n\tproxy: {\n\t\t\"mavo\": \"backend\"\n\t},\n\n\t// So that child classes can only override the static methods if they don't\n\t// need access to any instance variables.\n\tparse: function(content) {\n\t\treturn this.constructor.parse(content, this);\n\t},\n\tstringify: function(data) {\n\t\treturn this.constructor.stringify(data, this);\n\t},\n\n\tstatic: {\n\t\tparse: serialized => Promise.resolve(serialized),\n\t\tstringify: data => Promise.resolve(data),\n\t\textensions: [],\n\t\tdependencies: [],\n\t\tready: function() {\n\t\t\treturn Promise.all(this.dependencies.map(d => $.include(d.test, d.url)));\n\t\t}\n\t}\n});\n\nvar json = _.JSON = $.Class({\n\textends: _.Base,\n\tstatic: {\n\t\tparse: serialized => Promise.resolve(serialized? JSON.parse(serialized) : null),\n\t\tstringify: data => Promise.resolve(Mavo.toJSON(data)),\n\t\textensions: [\".json\", \".jsonld\"]\n\t}\n});\n\nvar text = _.Text = $.Class({\n\textends: _.Base,\n\tconstructor: function(backend) {\n\t\tthis.property = this.mavo.root.getNames(\"Primitive\")[0];\n\t},\n\n\tstatic: {\n\t\textensions: [\".txt\", \".md\", \".markdown\"],\n\t\tparse: (serialized, me) => Promise.resolve({[me? me.property : \"content\"]: serialized}),\n\t\tstringify: (data, me) => Promise.resolve(data[me? me.property : \"content\"])\n\t}\n});\n\nvar csv = _.CSV = $.Class({\n\textends: _.Base,\n\tconstructor: function(backend) {\n\t\tthis.property = this.mavo.root.getNames(\"Collection\")[0];\n\t\tthis.options = $.extend({}, _.CSV.defaultOptions);\n\t},\n\n\tstatic: {\n\t\textensions: [\".csv\", \".tsv\"],\n\t\tdefaultOptions: {\n\t\t\theader: true,\n\t\t\tdynamicTyping: true,\n\t\t\tskipEmptyLines: true\n\t\t},\n\t\tdependencies: [{\n\t\t\ttest: self.Papa,\n\t\t\turl: \"https://cdnjs.cloudflare.com/ajax/libs/PapaParse/4.1.4/papaparse.min.js\"\n\t\t}],\n\t\tready: base.ready,\n\t\tparse: (serialized, me) => csv.ready(() => {\n\t\t\tvar data = Papa.parse(serialized, csv.defaultOptions);\n\t\t\tvar property = me? me.property : \"content\";\n\n\t\t\tif (me) {\n\t\t\t\t// Get delimiter & linebreak for serialization\n\t\t\t\tme.options.delimiter = data.meta.delimiter;\n\t\t\t\tme.options.linebreak = data.meta.linebreak;\n\t\t\t}\n\n\t\t\tif (data.meta.aborted) {\n\t\t\t\tthrow data.meta.errors.pop();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t[property]: data.data\n\t\t\t};\n\t\t}),\n\t\t\n\t\tstringify: (serialized, me) => csv.ready(() => {\n\t\t\tvar property = me? me.property : \"content\";\n\t\t\tvar options = me? me.options : csv.defaultOptions;\n\t\t\treturn Papa.unparse(data[property], options);\n\t\t})\n\t}\n});\n\nObject.defineProperty(_, \"create\", {\n\tvalue: function(format, backend) {\n\t\tif (format && typeof format === \"object\") {\n\t\t\treturn format;\n\t\t}\n\n\t\tif (typeof format === \"string\") {\n\t\t\t// Search by id\n\t\t\tformat = format.toLowerCase();\n\n\t\t\tfor (var id in _) {\n\t\t\t\tvar Format = _[id];\n\n\t\t\t\tif (id.toLowerCase() == format) {\n\t\t\t\t\treturn new Format(backend);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!format) {\n\t\t\tvar url = backend.url? backend.url.pathname : backend.raw;\n\t\t\tvar extension = (url.match(/\\.\\w+$/) || [])[0] || \".json\";\n\t\t\tvar Format = _.JSON;\n\n\t\t\tfor (var id in _) {\n\t\t\t\tif (_[id].extensions.indexOf(extension) > -1) {\n\t\t\t\t\t// Do not return match, as we may find another match later\n\t\t\t\t\t// and last match wins\n\t\t\t\t\tFormat = _[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn new Format(backend);\n\t\t}\n\t}\n});\n\n})(Bliss, Bliss.$);\n"]}