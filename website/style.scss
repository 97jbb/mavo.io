// Colors
$magenta: hsl(330, 100%, 50%);
$aqua: hsl(200, 90%, 55%);
$green: hsl(85, 80%, 45%);
$orange: hsl(35, 100%, 50%);

// Fonts
$body-font: Helvetica Neue, sans-serif;
$heading-font: Didot, 'Didot LT STD', "Bodoni 72", Bodoni, 'Bodoni MT', 'Libre Bodoni', 'Hoefler Text', Cambria, Georgia, serif;
$mono-font: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;

@import url("https://fontlibrary.org/face/libre-bodoni");

@mixin flat-button($foreground, $background: white) {
	display: inline-block;
	padding: .2em .8em;
	border: 2px solid $foreground;
	border-radius: .3em;
	color: $foreground;
	font-size: 130%;
	font-weight: 400;
	text-decoration: none;

	&:hover {
		background: $foreground;
		color: $background;
	}
}

.button {
	display: inline-block;
	padding: .2em .8em;
	border: 2px solid white;
	border-color: var(--color);
	border-radius: .3em;
	color: white;
	color: var(--color);
	font-size: 130%;
	font-weight: 400;
	text-decoration: none;

	&:hover {
		background: var(--color);
		color: var(--background);
	}
}

body {
	margin: 0;
	font: 300 106%/1.5 $body-font;
	font-kerning: auto;
	hyphens: auto;
}

a {
	color: $aqua;

	&:not(:hover) {
		text-decoration: none;
	}
}

dd + dt {
	margin-top: 1.5em;
}

pre, code {
	background: hsl(0, 0%, 96%);
	font-family: $mono-font;
	tab-size: 4;
	hyphens: none;
	white-space: pre;
}

	/* Code blocks */
	pre {
		padding: 1em 1.5em;
		margin: .5em -1.5em;
		overflow: auto;
		background: radial-gradient(white, hsl(0, 0%, 92%));

		clip-path: polygon(0 0, 100% .5em, calc(100% - .5em) calc(100% - 1em), 0 100%);

		@supports not (clip-path: polygon(0 0)) {
			& {
				border-radius: .5em;
			}
		}

		& > code {
			background: transparent;
		}
	}

	:not(pre) > code {
		padding: .2em .4em;
		border-radius: .25em;
	}

hr {
	height: 2em;
	margin: 1.5em 0 1em;
	background: url(hr.svg) no-repeat center;
	border: none;
}

input {
	font: inherit;
	color: inherit;
	border: none;
	border-bottom: .1em solid rgba(0,0,0,.4);
}

body > header,
body > section,
body > footer {
	display: flex;
	flex-flow: column;
	align-items: center;
	justify-content: center;
	padding: 1em;
}

body > header {
	position: relative;
	z-index: 1;
	display: flex;
	padding: .8em 1em .6em;
	justify-content: space-between;
	flex-flow: row;
	clip-path: polygon(0% 0%, 100% 0%, 100% calc(100% - 1.5em), 0% 100%);
	background: #222;
	color: white;

	.button {
		--color: white;
		--background: #222;
	}

	.logo {
		margin: 0;

		img {
			height: 2rem;
		}
	}

	& + h2 {
		padding: 1.5em 1em .5em;
		margin-top: -1.5em;
		clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% calc(100% - 1em));
		background: $magenta;
		color: white;
		text-align: right;
		font-size: 250%;
		font-weight: 200;
		line-height: 1;
	}
}

body > section {
	& > h1 {
		font: bold 200% $heading-font;
		color: $orange;
	}

	& > * {
		width: 900px;
		max-width: 90vw;
	}
}

.home {
	body > header {
		display: block;
		text-align: center;
		padding: 5em;
		padding: 2em calc(50% - 12em) 5em;
		clip-path: polygon(0% 0%, 100% 0%, 100% calc(100% - 5em), 0% 100%);

		.logo {
			//font: 300 180% $heading-font;

			img {
				display: block;
				height: 7rem;
				margin: auto;
				margin-bottom: .5em;
			}
		}

		.tagline {
			font-size: 120%;
			color: hsla(0,0%,100%,.6);
			color: $orange;
			font-weight: 100;
			margin-bottom: 0;
		}

		.intro {
			margin-top: .1em;
			text-align: justify;
			hyphens: auto;
			font-weight: 500;
		}

		.button {
			margin: auto;
			--color: $green;

			& + p {
				color: hsla(0,0%,100%,.7);
				font-style: italic;
				font-size: 75%;

				a {
					color: inherit;
					text-decoration: underline;

					&:hover {
						color: white;
					}
				}
			}
		}
	}
}

.docs {
	body > header + h2 {
		background: $green;
	}

	.example {
		& > h1 {
			color: $green;
		}

		&.color-picker .example-container {
			padding: 0;

			div[style] {
				padding: 2em;
			}

			input {
				display: block;
			}
		}

		&.scoped-expressions .example-container {
			[typeof] {
				padding: 1em;
				border: 1px solid rgba(0,0,0,.2);
				background: rgba(0,0,0,.05);
				margin: 1em;
			}
		}

		&.pow .example-container {
			font-size: 300%;

			input {
				background: rgba(0,0,0,.05);
				border: none;
			}

			input {
				text-align: center;
			}

			[property="exponent"] {
				font-size: 60%;
				vertical-align: top;
			}
		}

		&.movie .example-container {
			padding: 0;

			div[class] {
				padding: 2em;
			}
		}

		.example-container {
			position: relative;
			transform: scale(1);
			padding: 2.5em 2em 2em;
			border: 1px solid rgba(0,0,0,.3);
			margin: 1em 0 0;

			input[type="number"] {
				font-size: 150%;
				max-width: 2em;
			}

			[data-multiple] {
				padding: .5em;
				border: 1px solid rgba(0,0,0,.1);
				margin: .5em 0;

				h1 {
					margin-top: 0;
				}
			}

			@media print {
				display: none;
			}
		}

		.mv-debug-storage {
			margin: 0;
			background: rgba(0,0,0,.06);
			color: black

			&:not(:last-child) {
				margin-bottom: 1em;
			}

			summary {
			   display: block;
			   padding: .3em .8em;
			   background: rgba(0,0,0,.3);
			   color: white;
			   font-size: 75%;
			   font-weight: bold;
			   cursor: pointer;
			   outline: none;

			   &:hover, &:focus {
				   background: rgba(0,0,0,.6);
			   }
		   }

		   pre {
			   background: none;
			   margin: 0;
			   color: black;

			   th {
				   color: white;
			   }

				th, td {
					border-color: hsla(0,0%,0%,.1);
				}
		   }

		   @media print {
			   display: none;
		   }
		}
	}

	#show-examples {
		&, & + label {
			margin: 0;
			line-height: 1;

			@media print {
				display: none;
			}

			@media (min-width: 1300px) {
				position: fixed;
				bottom: 2rem;
				left: 2rem;
			}
		}

		& + label {
			left: 3.5rem;
		}

		&:not(:checked) ~ section .example {
			display: none;
		}
	}

	#summary {
		break-inside: avoid;

		dt {
			font-size: 120%;
			font-weight: bold;
		}
	}

	body > section > table {
		border-spacing: 0;
		border-collapse: collapse;

		th, td {
			text-align: left;
		}

		td {
			padding: .1em .5em;
			border: 1px solid rgba(0,0,0,.1);
		}

		code {
			background: transparent;
		}
	}
}

.note, .tip {
	border-left: .5em solid mix(white, $aqua, 30%);
	padding-left: .5em;
	margin-left: -1em;

	&::before {
		content: "Note: ";
		font-weight: bold;
		color: $aqua;
	}
}

.tip {
	&::before {
		content: "Tip: ";
	}
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: slategray;
}

.token.punctuation {
	color: #999;
}

.namespace {
	opacity: .7;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
	color: $magenta;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: mix($green, black, 90%);
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
	color: #a67f59;
	background: hsla(0, 0%, 100%, .5);
}

.token.atrule,
.token.attr-value,
.token.keyword {
	color: $aqua;
}

.token.function {
	color: #DD4A68;
}

.token.regex,
.token.important,
.token.variable {
	color: #e90;
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}

.unimplemented {
	text-decoration: line-through;
	text-decoration-style: dashed;
}
