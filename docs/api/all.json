{
	"mavoClass": [
		{
			"name": "Mavo",
			"description": "`Mavo` is the main class. Every Mavo app is an instance of `Mavo` and `mavo.js` is the entry point of Mavo itself.",
			"filename": "mavo.js",
			"member": [
				{
					"static": false,
					"argument": [
						{
							"name": "element",
							"type": "Element",
							"description": "The Mavo root element"
						}
					],
					"role": "constructor"
				},
				{
					"name": "treeBuilt",
					"type": "Promise",
					"static": false,
					"description": "Promise that resolves when the Mavo tree has been built.",
					"argument": [
						{}
					],
					"role": "property"
				},
				{
					"name": "element",
					"role": "property",
					"type": "Element",
					"static": false,
					"description": "The Mavo root element. Same element that was passed to the constructor.",
					"argument": [
						{}
					]
				},
				{
					"name": "inProgress",
					"role": "accessor",
					"type": "String",
					"static": false,
					"description": "Name of event that is currently in progress (e.g. `\"Loading\"`, `\"Saving\"` etc), if any, `false` otherwise. Setting this triggers the progress indicator UI.",
					"argument": [
						{}
					]
				},
				{
					"name": "getData",
					"type": "Object",
					"static": false,
					"role": "function",
					"description": "Calls `getData()` on the root node.",
					"argument": [
						{
							"name": "o",
							"type": "Object",
							"description": "Configuration object. For details see [Mavo.Node#getData()](Mavo.Node#getData)"
						}
					],
					"returnType": "Object",
					"returnDescription": "Data of entire Mavo app"
				},
				{
					"name": "toJSON",
					"type": "String",
					"static": false,
					"role": "function",
					"description": "Serializes all current data as JSON",
					"argument": [],
					"returnType": "String",
					"returnDescription": "The current data as a JSON string"
				},
				{
					"name": "all",
					"type": "Object",
					"static": true,
					"role": "property",
					"description": "Object with all Mavo instances that are currently active on the page. These can be accessed by index, e.g. `Mavo.all[0]` or by name, like `Mavo.all.appid`.",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.Node",
			"filename": "node.js",
			"description": "Every property corresponds to an instance of this class, i.e. a node in the Mavo tree. ",
			"member": [
				{
					"static": false,
					"role": "constructor",
					"argument": [
						{}
					]
				},
				{
					"name": "element",
					"type": "Element",
					"static": false,
					"role": "property",
					"description": "The DOM element that this Mavo Node corresponds to.",
					"argument": [
						{}
					]
				},
				{
					"name": "template",
					"type": "Mavo.Node",
					"static": false,
					"role": "property",
					"description": "A reference to the first Mavo node like this one that was ever created. This is `null` for properties that are not inside any collection, or for the first item of a collection across all its instances. I.e. even if a collection is nested within another collection, there is only one template per collection.",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.Group",
			"parentClass": "Mavo.Node",
			"filename": "group.js",
			"description": "Group nodes are analogous to JSON objects. There is always at least one group in every Mavo: The root.",
			"member": [
				{
					"static": false,
					"role": "property",
					"argument": [
						{}
					],
					"name": "children",
					"type": "Object",
					"description": "Object literal with child properties. The keys are the property names and the values are the Mavo nodes of the properties (which could in turn be other groups, [primitives](#Mavo.Primitive), or [collections](#Mavo.Collection))."
				}
			],
			"parent": "Mavo.Node"
		},
		{
			"name": "Mavo.Collection",
			"parent": "Mavo.Node",
			"filename": "collection.js",
			"description": "Collection nodes are analogous to JSON arrays, and correspond to `mv-multiple` elements. However, the collection itself is not represented by any HTML element, what is represented in the HTML is the collection *items*.",
			"member": [
				{
					"name": "children",
					"type": "Array",
					"static": false,
					"role": "property",
					"description": "Array with all collection items. Collection items are other Mavo nodes, and can be either [groups](#Mavo.Group) or [primitives](#Mavo.Primitive).",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.Primitive",
			"parent": "Mavo.Node",
			"filename": "primitive.js",
			"description": "Primitive nodes are analogous to JSON strings, numbers, and booleans. They correspond to property elements that do not contain other properties.",
			"member": [
				{
					"name": "value",
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.Locale",
			"filename": "locale.js",
			"description": "Class responsible for localization. Each locale is an instance of this.",
			"member": [
				{
					"name": "lang",
					"type": "String",
					"static": false,
					"role": "property",
					"description": "Language code, based on HTMLâ€™s language codes, e.g. `\"en\"` or `\"en-GB\"`.",
					"argument": [
						{}
					]
				},
				{
					"name": "phrases",
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.Formats.Base",
			"filename": "formats.js",
			"description": "[Mavo Formats](https://mavo.io/docs/formats/) are implemented as classes that inherit from `Mavo.Formats.Base`. `Mavo.Formats.Base` itself is abstract and should not be directly instantiated.",
			"member": [
				{
					"name": "parse",
					"static": false,
					"role": "function",
					"description": "Converts a string of serialized data to a data object",
					"argument": [
						{
							"name": "content",
							"type": "String",
							"description": "Serialized data"
						}
					],
					"returnType": "Object",
					"returnDescription": "Data object"
				},
				{
					"name": "stringify",
					"static": false,
					"role": "function",
					"description": "Converts a data object to a serialized data string based on the current format.",
					"argument": [
						{
							"name": "data",
							"type": "Object",
							"description": "Data object."
						}
					],
					"returnType": "String",
					"returnDescription": "Serialized string corresponding to the data."
				}
			]
		},
		{
			"name": "Mavo.Expressions",
			"filename": "expressions.js",
			"description": "Each Mavo app has one Expressions object that handles picking up expressions and creating the necessary objects for each.",
			"member": [
				{
					"name": "update",
					"static": false,
					"role": "function",
					"description": "Updates all expressions in the Mavo app.",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.DOMExpression",
			"filename": "domexpression.js",
			"description": "A `DOMExpression` object is created for each text node or attribute that contains one or more expressions.",
			"member": [
				{
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.Expression",
			"filename": "expression.js",
			"description": "Expression instances are created for each expression. Copies of the expression (due to collection items) use the same Expression object.",
			"member": [
				{
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.Permissions",
			"filename": "permissions.js",
			"description": "Permissions such as edit, save, add, delete etc.",
			"member": [
				{
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.Backend",
			"filename": "backend.js",
			"description": "Base class for backends to inherit from.",
			"member": [
				{
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.UI.Bar",
			"filename": "ui.bar.js",
			"description": "Class for the Mavo toolbar.",
			"member": [
				{
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.UI.Itembar",
			"filename": "ui.itembar.js",
			"description": "Class for the item bar that allows deleting, rearranging, cloning collection items.",
			"member": [
				{
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.UI.Message",
			"filename": "ui.message.js",
			"description": "Class for messages displayed to the user, e.g. errors, notices etc.",
			"member": [
				{
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"member": [
				{
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			]
		}
	]
}