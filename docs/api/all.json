{
	"class": [
		{
			"name": "Mavo",
			"description": "`Mavo` is the main class. Every Mavo app is an instance of `Mavo` and `mavo.js` is the entry point of Mavo itself.",
			"filename": "mavo.js",
			"member": [
				{
					"static": false,
					"argument": [
						{
							"name": "element",
							"type": "Element",
							"description": "The Mavo root element"
						}
					],
					"role": "constructor"
				},
				{
					"name": "treeBuilt",
					"type": "Promise",
					"static": false,
					"description": "Promise that resolves when the Mavo tree has been built.",
					"argument": [
						{}
					],
					"role": "property"
				},
				{
					"name": "element",
					"role": "property",
					"type": "Element",
					"static": false,
					"description": "The Mavo root element. Same element that was passed to the constructor.",
					"argument": [
						{}
					]
				},
				{
					"name": "inProgress",
					"role": "accessor",
					"type": "String",
					"static": false,
					"description": "Name of event that is currently in progress (e.g. `\"Loading\"`, `\"Saving\"` etc), if any, `false` otherwise. Setting this triggers the progress indicator UI.",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.Node",
			"filename": "node.js",
			"description": "Every property corresponds to an instance of this class, i.e. a node in the Mavo tree. ",
			"member": [
				{
					"static": false,
					"role": "constructor",
					"argument": [
						{}
					]
				},
				{
					"name": "element",
					"type": "Element",
					"static": false,
					"role": "property",
					"description": "The DOM element that this Mavo Node corresponds to.",
					"argument": [
						{}
					]
				},
				{
					"name": "template",
					"type": "Mavo.Node",
					"static": false,
					"role": "property",
					"description": "A reference to the first Mavo node like this one that was ever created. This is `null` for properties that are not inside any collection, or for the first item of a collection across all its instances. I.e. even if a collection is nested within another collection, there is only one template per collection.",
					"argument": [
						{}
					]
				}
			]
		},
		{
			"name": "Mavo.Group",
			"parentClass": "Mavo.Node",
			"filename": "group.js",
			"description": "Group nodes are Mavo's equivalent of objects. Their child nodes are other properties, which could be other groups, primitives, or collections. There is always at least one group in every Mavo: The root.",
			"member": [
				{
					"static": false,
					"role": "property",
					"argument": [
						{}
					]
				}
			],
			"parent": "Mavo.Node"
		}
	]
}