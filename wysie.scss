$property: "[itemprop]:not([itemscope]), [property]:not([typeof])";

%reset {
	all: initial;
	font: inherit;
	color: inherit;
	text-decoration: inherit;
	text-align: inherit;
}

@mixin flat-button($color: black) {
	@extend %reset;
	padding: .4em .6em;
	border: 2px solid $color;
	border-radius: .4em;
	background: transparent;
	font: bold 80% Helvetica Neue, sans-serif;
	cursor: pointer;
	color: $color;

	&:hover {
		background: $color;
		color: white;
		border-color: transparent;
	}
}

[data-store] {
	// Unprocessed items
	display: none;
}

.wysie-root {
	.wysie-item {
		position: relative;
		margin-right: 1.5em;
	}

	.delete-hover {
		box-shadow: 0 0 0 50vmax hsla(0,100%,50%,.06) inset, 0 0 0 .1em hsla(0,100%,50%,.05);
		border-radius: .1em;
	}

	button.add {
		display: inline-block;
		//margin-left: .5em;
		vertical-align: middle;
	}

	.edit,
	.delete {
		all: initial;
		position: absolute;
		top: .1em;
		right: -1.5em;
		z-index: 1;
		padding: 0 .3em;
		cursor: pointer;
		transform: scale(-1, 1);
		color: rgba(0,0,0,.3);

		&:hover {
			border-radius: 50%;
			background: rgba(0,0,0,.2);
			color: white;
		}
	}

	.delete {
		color: rgba(180,0,0,.8);
	}

	.delete:hover {
		background: rgba(180,0,0,.8);
	}

	& > * {
		&:not([data-editing]) {
			.wysie-buttons,
			.empty,
			.delete,
			button.add {
				display: none;
			}
		}

		&[data-editing] {
			.edit {
				display: none;
			}

			// Primitives
			#{$property} {
				input, select, textarea {
					@extend %reset;
				}

				textarea {
					box-sizing: border-box;
					width: 100%;
				}

				&.using-popup,
				input, select, textarea {
					&:hover, &:focus {
						outline: 1px dashed;
						outline-offset: 1px;
					}

					&:hover {
						$color: hsla(58, 100%, 50%, .15);

						box-shadow: 0 0 0 2px $color, 0 0 0 99em $color inset;
						outline-color: hsla(200,10%,50%,.3);
					}

					&:focus {
						outline-color: hsla(200,50%,40%,.6);
					}
				}
			}
		}
	}

	.popup {
		all: initial;
		position: absolute;
		z-index: 2;
		padding: 1em;
		border: 1px solid rgba(0,0,0,.3);
		border-radius: .4em;
		margin: .3em 0 0 -.5em;
		box-shadow: 0 .1em .3em rgba(0,0,0,.3);
		background: white;

		&::before {
			content: "";
			position: absolute;
			top: -.36em;
			left: 1em;
			padding: .3em;
			border: inherit;
			border-right-width: 0;
			border-bottom-width: 0;
			background: inherit;
			transform: rotate(45deg)
		}

		input, select {
			display: block;
			font: inherit;
			min-width: 100%;
		}

		select[size] {
			border: 1px solid rgba(0,0,0,.2);
		}

		.image-popup {
			.image-preview {
				position: relative;
				display: inline-block;

				progress {
					position: absolute;
					left: 0;
					right: 0;
					bottom: 1em;
					width: 100%;

					&[value="0"],
					&[value="100"] {
						display: none;
					}
				}

				img {
 					display: block;
					max-width: 100%;
				}
			}
		}
	}

	.wysie-buttons {
		position: relative;
		padding: .5em 0 .1em;
		text-align: center;

		button.save {
			@include flat-button(hsl(80, 80%, 40%));
		}

		button.cancel {
			@include flat-button(#c00);
			margin-left: .4em;
		}
	}

	&.readonly {
		.edit, [data-editing], .add {
			display: none;
		}
	}

	&.authenticated .auth-controls .login,
	&:not(.authenticated) .auth-controls .logout {
		display: none;
	}

	.auth-controls {
		font-size: 80%;
		margin-bottom: .8em;

		.login, .logout {
			@include flat-button();
		}

		.login {
			margin-right: .6em;
		}

		.logout {
			margin-left: .6em;
		}

		.status {

		}

		.status:empty {
			content: "Not logged in";
		}
	}

	.progress {
		margin-top: .5em;
		font-size: 80%;

		&::before {
			content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 40 40">\
				<style>\
					@keyframes dasharray { 50% { stroke-dasharray: 0 100 100 } to { stroke-dasharray: 100 100 100 } } \
					circle { \
						fill: none; \
						stroke: currentColor; stroke-width: 8; stroke-opacity: .6; stroke-dasharray: 0 0 100; \
						animation: dasharray 2s infinite; \
					} \
				</style>\
				<circle r="16" cx="50%" cy="50%" transform="rotate(-90, 20, 20)" /></svg>');
			display: inline-block;
			vertical-align: middle;
			margin-right: .2em;
		}
	}
}
